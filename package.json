{
  "name": "mermaid-docx",
  "version": "1.0.0",
  "description": "Convert markdown with mermaid diagrams to DOCX",
  "main": "mermaid-filter.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "convert": "pandoc --filter ./mermaid-filter.js -f markdown -t docx -o",
    "convert:file": "pandoc --filter ./mermaid-filter.js -f markdown -t docx -o \"$2\" \"$1\"",
    "convert:all": "find . -name '*.md' -type f | while read file; do outfile=\"${file%.md}.docx\"; echo \"Converting $file to $outfile\"; npm run convert:file \"$file\" \"$outfile\"; done",
    "convert:folder": "bash -c 'folder=\"$1\"; recurse=\"$2\"; depth=\"-maxdepth 1\"; if [ \"$recurse\" = \"--recurse\" ]; then depth=\"\"; fi; find \"$folder\" -name \"*.md\" -type f $depth | while read file; do outfile=\"${file%.md}.docx\"; echo \"Converting $file to $outfile\"; npm run convert:file \"$file\" \"$outfile\"; done' --",
    "postinstall": "puppeteer install",
    "setup": "npm install && puppeteer install",
    "find-chrome": "node -e \"const fs=require('fs');const paths=['/usr/bin/google-chrome','/usr/bin/chromium','/usr/bin/chromium-browser','/snap/bin/chromium','/usr/bin/brave-browser','/usr/bin/microsoft-edge'];for(const p of paths){if(fs.existsSync(p)){console.log(p+' exists');}else{console.log(p+' not found');}}\""
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@mermaid-js/mermaid-cli": "^10.4.0",
    "mermaid-filter": "^1.4.7",
    "pandoc-filter": "^2.2.0",
    "puppeteer": "^22.8.2",
    "sharp-cli": "^5.1.0",
    "svg-to-png": "^4.0.0",
    "uuid": "^9.0.1"
  },
  "bin": {
    "mermaid-docx": "./mermaid-filter.js"
  },
  "devDependencies": {
    "pandoc": "^0.2.0"
  }
}
